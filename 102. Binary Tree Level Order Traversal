/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int level= 1,max = 0;
    vector<vector<int>> answer;
    vector<int> temp;/*
    void calculator( TreeNode* root, int level ){
        if ( answer.size() >= level ){
            answer[level-1].push_back(root->val); 
        }
        else{
            temp.push_back(root->val);
            answer.push_back(temp); 
            temp.clear();
        }
        if ( root->left ) 
            calculator(root->left, level+1);
        if ( root->right )
            calculator(root->right, level+1);
    }
    vector<vector<int>> levelOrder(TreeNode* root) {
        if ( root )
            calculator( root, level );
        return answer;
    }*/
    vector<vector<int>> levelOrder(TreeNode* root) {
        if( !root )
            return answer;
        if ( level > max ){
            max = level;
            temp.push_back(root->val);
            answer.push_back(temp);
            temp.clear();
        }
        else {
            answer[level-1].push_back(root->val);
        }
        if ( root->left ){
            level++;
            levelOrder(root->left);
            level--;
        }
        if ( root->right ){
            level++;
            levelOrder(root->right);
            level--;
        }
            
        return answer;
        
    }
    
    
    
};
