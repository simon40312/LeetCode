/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int compare = 0;
    bool f= 0,begin = 1;
    vector<int> answer;
    void inorderSort ( TreeNode* root ){
        if ( root->left ) {
            isValidBST( root->left ) ;
            if ( begin ){
                begin = 0;
                compare = root->val; 
            }
            else if ( compare < root->val )
                compare = root->val;
            else 
                f = 1;
        }
        else
            if ( begin ){
                begin = 0;
                compare = root->val; 
            }
            else if ( compare < root->val )
                compare = root->val;
            else 
                f = 1;
        
        if ( root->right )
            isValidBST( root->right ) ;
    }
    bool isValidBST(TreeNode* root) {
        inorderSort( root );
        if ( f )
            return false;
        return true;
    }
    
};
