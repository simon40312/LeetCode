/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int mid;
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2)     {
        vector<int> array;
        
        if ( root1 ) Inorder(root1,array);
        mid = array.size();
        if ( root2 ) Inorder(root2,array);
        
        inplace_merge( array.begin(),array.begin()+mid,array.end() );
        
        return array;
    }
    
    void Inorder( TreeNode* root, vector<int> &array ){
        if ( root-> left )
            Inorder( root->left,array );
        array.push_back(root->val);
        if ( root-> right )
            Inorder( root->right,array );
    }
};










