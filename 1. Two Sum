class Solution {
public:
    unordered_map< int,vector<int> > list;
    
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> answer;
        for ( int i = 0; i < nums.size(); i++ ){
            list[nums[i]].push_back(i) ;
        }
        //for( auto t:list ) cout << "t1:" << t.first << " t2: " << t.second<<endl; /*
        for( int i = 0; i < nums.size(); i ++ ){
            int intForAdd = target - nums[i];
            auto returnFind = list.find(intForAdd);
            if ( returnFind != list.end() ){
                for ( int ii = 0; ii < returnFind->second.size(); ii++ ) 
                    if ( returnFind->second[ii] != i ){
                        answer.push_back(i);
                        answer.push_back(returnFind->second[ii]);
                        return answer;
                    }
            }
        }
        return answer;
    }
};
