/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    bool check(TreeNode* root, TreeNode* subroot){
        if(root==nullptr and subroot==nullptr) return true;
        if(root==nullptr or subroot==nullptr) return false;
        if(root->val!=subroot->val) return false;
        if(check(root->left,subroot->left) and check(root->right,subroot->right)) return true;
        return false;
    }
public:
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(root==nullptr) return false;
        if(root->val==subRoot->val and check(root,subRoot)) return true;
        else if(isSubtree(root->left,subRoot)) return true;
        else if(isSubtree(root->right,subRoot)) return true;
        return false;
    }
};


