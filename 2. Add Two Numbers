/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode ans, head, pre = null ;
        ans = new ListNode(0);
        head = ans;
        
        int Ten = 0, nextTen = 0;
        if ( l1 == null && l2 == null )
            return null;
        
        while ( l1 != null || l2 != null ){
            
            if ( l1 != null && l2 != null ){
                ans.val = l1.val + l2.val + nextTen;;
                if ( ans.val >= 10 ) {
                    Ten = ans.val / 10; 
                    ans.val = ans.val % 10;
                } // if 
                                                     
            } // if
            else if ( l1 != null ) {
                ans.val = l1.val + nextTen ; 
                if ( ans.val >= 10 ) {
                    Ten = ans.val / 10; 
                    ans.val = ans.val % 10;
                }
            } // else if 
            else if ( l2 != null ) {
                ans.val = l2.val + nextTen; 
                if ( ans.val >= 10 ) {
                    Ten = ans.val / 10; 
                    ans.val = ans.val % 10;
                }
            } // else if
            
            nextTen = Ten;
            Ten = 0;     
            pre = ans;
            ans.next = new ListNode(0);
            ans = ans.next;
            if ( l1.next == null || l2.next == null ) {
               
                break;
            } // if
                
            l1 = l1.next;
            l2 = l2.next;           
              
        } // while
        
        while ( l1.next != null || l2.next != null ) {
            if ( l1.next != null ) {
                ans.val = l1.next.val + nextTen ; 
                if ( ans.val >= 10 ) {
                    Ten = ans.val / 10; 
                    ans.val = ans.val % 10;
                }
            } // else if 
            else if ( l2.next != null ) {
                ans.val = l2.next.val + nextTen; 
                if ( ans.val >= 10 ) {
                    Ten = ans.val / 10; 
                    ans.val = ans.val % 10;
                }
            } // else if
            
            nextTen = Ten;
            Ten = 0;
            pre = ans;
            ans.next = new ListNode(0);
            ans = ans.next;
            if ( l1.next != null ) 
                l1 = l1.next;
            else if ( l2.next != null )
                l2 = l2.next;
        } // while
        
        
        
        if ( nextTen != 0 ) {
            //ans = new ListNode(0);
            ans.val = nextTen;
            ans.next = null;
        }
        else{
            
            pre.next = null;
        }
            
        return head;
        
    }
    
}
